{
  "id": "4b1163e2-9d6c-4a53-9249-b0ab6775df9e",
  "name": "RMA Inquiry",
  "template": "custom",
  "owner": "sremington@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<style>",
    "  .btn.btn-mobile {",
    "  \tpadding-left: 6px;",
    "    padding-right: 6px;",
    "    width: 90px;",
    "  }",
    "  ",
    "  .button1 {width: 8%; }",
    "  .button2 {width: 11%;}",
    "  .button22 {width: 20%;}",
    "  .button3 {width: 25%;}",
    "  .button4 {width: 33%;}",
    "  ",
    "  .no-click {",
    "    pointer-events: none;",
    "  }",
    "  ",
    "  input[type=search]::-webkit-search-cancel-button {",
    "    -webkit-appearance: searchfield-cancel-button;",
    "  }",
    "</style>",
    "",
    "",
    "",
    "<div class=\"panel\">",
    "  <div class=\"panel-heading\">",
    "    <div class=\"panel-control\">",
    "      <!-- Loading / Refresh -->",
    "      <label [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "    </div>",
    "    <h3 class=\"panel-title\">Search</h3>",
    "  </div>",
    "  <div class=\"panel-body\">",
    "    <form class=\"form-horizontal\">",
    "      <div class=\"form-group\">",
    "        <!-- Customer drop down -->",
    "        <label for=\"customers\" class=\"col-sm-2 control-label\">Selected Customer: </label>",
    "        <div class=\"col-sm-10\">",
    "          <select id=\"customers\" name=\"customers\" class=\"form-control\"",
    "            [ngModel]=\"bezl.vars.selectedAccount?.ID\" (ngModelChange)=\"bezl.functions['custSelection']($event);\" > ",
    "            <option *ngFor=\"let c of bezl.vars['custList']\" [value]=\"c.ID\">{{c.Name}}</option>",
    "          </select>",
    "        </div>",
    "      </div>",
    "      ",
    "      <div class=\"form-group\">",
    "        <!-- Start date -->",
    "        <label for=\"startDate\" class=\"col-sm-2 control-label\">Start Date</label>",
    "        <div class=\"col-sm-4\">",
    "          <input type=\"date\" class=\"form-control mb-2 mr-sm-2 mb-sm-0\" style=\"height:32px\" [(ngModel)]=\"bezl.vars['startDate']\" name=\"startDate\">",
    "        </div>",
    "        ",
    "        <!-- End date -->",
    "        <label for=\"endDate\" class=\"col-sm-2 control-label\">End Date</label>",
    "        <div class=\"col-sm-4\">",
    "          <input type=\"date\" class=\"form-control mb-2 mr-sm-2 mb-sm-0\" style=\"height:32px\" [(ngModel)]=\"bezl.vars['endDate']\" name=\"endDate\">",
    "        </div>",
    "      </div>",
    "    </form>",
    "  </div>",
    "  <div class=\"panel-footer\">",
    "    <!-- Search button -->",
    "    <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!bezl.vars.loading\" (click)=\"bezl.functions['search']()\">Search</button>",
    "  </div>",
    "</div>",
    "",
    "",
    "<div class=\"row\">",
    "  <div class=\"col-sm-12\">",
    "    <input class=\"form-control\" id=\"filter\" name=\"filter\" type=\"search\" incremental=\"true\" placeholder=\"Filter by...\" [(ngModel)]=\"bezl.vars['filter']\" (search)=\"bezl.functions['filter']()\">",
    "  </div>",
    "</div>",
    "",
    "      ",
    "      ",
    "",
    "<table class=\"table table-hover table-striped\" id=\"RMAList\">",
    "   <thead>",
    "    <tr>",
    "     <th>",
    "       ",
    "       <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "       <div class=\"btn-group btn-group-justified hidden-xs\" role=\"group\" aria-label=\"Justified button group\">",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\"",
    "                   (click)=\"bezl.functions['sort']('RMANum')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">RMA #</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'RMANum' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'RMANum' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\"",
    "                   (click)=\"bezl.functions['sort']('RMADate')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">RMA Date</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'RMADate' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'RMADate' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('ContactName')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Contact</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'ContactName' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'ContactName' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "       </div>",
    "       ",
    "       <!-- This is the normal button layout for small screens -->",
    "       <div class=\"visible-xs\">",
    "         Sort By: <br />",
    "         ",
    "         ",
    "                <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('RMANum')\"class=\"btn btn-default\">",
    "               <span class=\"pull-left\">RMA #</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'RMANum' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'RMANum' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "                  </div>",
    "\t",
    "                  <div class=\"btn-group\">",
    "             <button type=\"button\"(click)=\"bezl.functions['sort']('RMADate')\" class=\"btn btn-default\">",
    "               <span class=\"pull-left\">RMA Date</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'RMADate' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'RMADate' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "                  </div>",
    "          </div>",
    "            ",
    "            <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('ContactName')\" class=\"btn btn-default\" >",
    "               <span class=\"pull-left\">Contact</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'ContactName' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'ContactName' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "            </div>",
    "          </div>",
    "         </div>",
    "       ",
    "     </th>",
    "    </tr>",
    "   </thead>",
    "  <tbody>",
    "   <tr class=\"read\" *ngFor=\"let row of bezl.vars.RMAs\">",
    "    <td>",
    "      <!-- Main row per account -->",
    "      <div class=\"row\"",
    "       (click)=\"bezl.functions['selectRow'](row)\">",
    "        <!-- Normal View -->",
    "        <div class=\"col-sm-4 hidden-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>",
    "          {{row.RMANum}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-4 hidden-xs\">{{row.RMADate.split('T')[0] | date}}</div>",
    "        <div class=\"col-sm-4 hidden-xs\">{{row.ContactName}}</div>",
    "        ",
    "        <!-- Mobile View -->",
    "        <div class=\"col-sm-4 visible-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>",
    "          RMA #: {{row.RMANum}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-4 visible-xs\">RMA Date: {{row.RMADate.split('T')[0] | date}}</div>",
    "        <div class=\"col-sm-4 visible-xs\">Contact Name: {{row.ContactName}}</div>",
    "      </div>",
    "      <!-- END: Main row per account -->",
    "      ",
    "      <!-- Drill-down view -->",
    "      <div class=\"row\" *ngIf=\"row.Selected\" style=\"margin-left:5px;margin-top:10px\">",
    "        ",
    "        <table class=\"table table-hover table-striped\">",
    "   <thead class=\"hidden-xs\">",
    "    <tr class=\"col-sm-12 bg-primary text-white\">",
    "       <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "      <th class=\"col-sm-1\"><div class=\"bg-primary text-white\">Line #</div></th>",
    "      <th class=\"col-sm-3\"><div class=\"bg-primary text-white\">Order #</div></th>",
    "      <th class=\"col-sm-4\"><div class=\"bg-primary text-white\">Part #</div></th>",
    "      <th class=\"col-sm-1\"><div class=\"bg-primary text-white\">Return Qty</div></th>",
    "      <th class=\"col-sm-3\"><div class=\"bg-primary text-white\">Reason</div></th>",
    "     </tr>",
    "    </thead>",
    "    <thead class=\"visible-xs\">",
    "       <!-- This is the normal button layout for small screens -->",
    "     <tr>",
    "      <th>",
    "\t\t<div class=\"row\">",
    "        Lines: ",
    "        </div>",
    "     </th>",
    "    </tr>",
    "   </thead>",
    "  <tbody>",
    "   <tr class=\"read\" *ngFor=\"let line of row.RMALines\">",
    "    <td>",
    "      <!-- Main row per line -->",
    "      <div class=\"row\">",
    "        <!-- Normal View -->",
    "        <div class=\"col-sm-1 hidden-xs\" align=\"center\">",
    "          {{line.RMALine}}",
    "        </div>",
    "        ",
    "\t\t<div class=\"col-sm-3 hidden-xs\">{{line.OrderNum}}-{{line.OrderLine}}-{{line.OrderRelNum}}</div>",
    "        <div class=\"col-sm-4 hidden-xs\">",
    "          {{line.PartNum}}<br> ",
    "          Description: {{line.LineDesc}}</div>",
    "        <div class=\"col-sm-1 hidden-xs\" >{{line.ReturnQty}}</div>",
    "        <div class=\"col-sm-3 hidden-xs\" >{{line.ReasonDesc}}</div>",
    "        ",
    "        <!-- Mobile View -->",
    "        <div class=\"col-sm-1 visible-xs\">Line #: {{line.RMALine}}</div>",
    "        ",
    "\t\t<div class=\"col-sm-3 visible-xs\">Order #: {{line.OrderNum}}-{{line.OrderLine}}-{{line.OrderRelNum}}</div>",
    "        <div class=\"col-sm-4 visible-xs\">",
    "          Part #: {{line.PartNum}}<br> ",
    "          Description: {{line.LineDesc}}</div>",
    "        <div class=\"col-sm-1 visible-xs\">Return Qty: {{line.ReturnQty}}</div>",
    "        <div class=\"col-sm-3 visible-xs\">Reason: {{line.ReasonDesc}}</div>",
    "      </div>",
    "        ",
    "      <!-- END: Drill-down view --> ",
    "      ",
    "      ",
    "     </td>",
    "   </tr>",
    "    ",
    "  </tbody>",
    "</table>",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "filter",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.filter(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.filter(bezl);\r\n});\r\n"
    },
    {
      "method": "selectRow",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.select(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.select(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "sort",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "innerSort",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.innerSort(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.innerSort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "search",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.runQuery(bezl, 'RMAs')\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.runQuery(bezl, 'RMAs');\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\nbezl.vars.config.baseUrl = \"\";\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://bezlio-apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://bezlio-apps.bezl.io\";\n    }\n}\n\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/rma-inquiry/js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\"",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.config = {};\r\nbezl.vars.config.baseUrl = \"\";\r\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://bezlio-apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://bezlio-apps.bezl.io\";\r\n    }\r\n}\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/rma-inquiry/js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\";\r\n"
    },
    {
      "method": "custSelection",
      "code": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function(functions) {\n\tfunctions.custSelection(bezl, parm)\n});\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'rma.js'], function (functions) {\r\n    functions.custSelection(bezl, parm);\r\n});\r\n"
    }
  ],
  "data": ""
}