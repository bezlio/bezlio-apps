{
  "id": "913df4fd-580a-4cb7-9c0e-55da493b95a3",
  "name": "CRM Calls View",
  "template": "custom",
  "owner": "nowens@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<style>",
    "  input[type=search]::-webkit-search-cancel-button {",
    "    -webkit-appearance: searchfield-cancel-button;",
    "  }",
    "</style>",
    "",
    "<p-dialog header=\"Initial Settings\" [(visible)]=\"bezl.vars.showSettingsDialog\" [modal]=\"false\" width=200 appendTo=\"body\">",
    "  <div class=\"row\">",
    "    <div class=\"col-sm-4\">",
    "      Platform: ",
    "    </div>",
    "    <div class=\"col-sm-8\">",
    "      <select class=\"form-control\" [(ngModel)]=\"bezl.vars.Platform\">",
    "          <option value=\"Epicor10\">Epicor 10+</option>",
    "          <option value=\"Epicor905\">Epicor 9.05</option>",
    "      </select>",
    "    </div>",
    "  </div>",
    "  <div class=\"row\" [hidden]=\"bezl.vars.Platform != 'Epicor10' && bezl.vars.Platform != 'Epicor905'\">",
    "    <div class=\"col-sm-4\">",
    "      Connection: ",
    "    </div>",
    "    <div class=\"col-sm-8\">",
    "      <input type=\"text\" [(ngModel)]=\"bezl.vars.Connection\">",
    "    </div>",
    "  </div>",
    "  <div class=\"row\" [hidden]=\"bezl.vars.Platform != 'Epicor10' && bezl.vars.Platform != 'Epicor905'\">",
    "    <div class=\"col-sm-4\">",
    "      Company: ",
    "    </div>",
    "    <div class=\"col-sm-8\">",
    "      <input type=\"text\" [(ngModel)]=\"bezl.vars.Company\">",
    "    </div>",
    "  </div>",
    "  <div class=\"row\">",
    "  \t<button (click)=\"bezl.functions['saveSettings']()\" class=\"btn btn-md btn-primary\">Save</button>",
    "  </div>",
    "</p-dialog>",
    "",
    "<div class=\"row\">",
    "  <div class=\"form-group\">",
    "    <!-- Customer drop down -->",
    "    <h5 for=\"customers\" class=\"col-sm-2 control-label\">Selected Customer: </h5>",
    "    <div class=\"col-sm-8\">",
    "      <select id=\"customers\" name=\"customers\" class=\"form-control\"",
    "                [ngModel]=\"bezl.vars.selectedAccount?.ID\" (ngModelChange)=\"bezl.functions['custSelection']($event);\" > ",
    "        <option  *ngFor=\"let c of bezl.vars['custList']\" [value]=\"c.ID\">{{c.Name}}</option>",
    "      </select>",
    "    </div>",
    "     <div class=\"col-2 pull-right\" [hidden]=\"!bezl.vars.loading\">",
    "      <label [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "    </div>",
    "    <div class=\"col-sm-2 pull-right\" [hidden]=\"bezl.vars.loading\">",
    "      <button (click)=\"bezl.vars.showSettingsDialog=true\" class=\"btn btn-md btn-default pull-right\"><i class=\"fa fa-cog fa-fw\"></i>Settings</button>",
    "    </div>",
    "  </div>",
    "</div>",
    "",
    "<div class=\"social-comment\" [hidden]=\"bezl.vars.loading\" *ngIf=\"bezl.vars.selectedAccount.ID != null\">",
    "  <div class=\"media-body\">",
    "    <div class=\"row\">",
    "      <div class=\"col-sm-2\">",
    "        <h5>Short Summary:</h5>",
    "      </div>",
    "      <div class=\"col-sm-10\">",
    "        <input type=\"text\" class=\"form-control\" ",
    "               placeholder=\"Short Summary...\" ",
    "               [(ngModel)]=\"bezl.vars.shortSummary\"",
    "               style=\"width:100%\">",
    "      </div>",
    "    </div>",
    "    <div class=\"row\">",
    "      <div class=\"col-sm-2\">",
    "        <h5>Details</h5>",
    "      </div>",
    "      <div class=\"col-sm-10\" style=\"margin-bottom:4px\">",
    "        <textarea class=\"form-control\" ",
    "                  placeholder=\"Details...\" ",
    "                  [(ngModel)]=\"bezl.vars.details\"></textarea>",
    "      </div>",
    "    </div>",
    "    <div class=\"row\">",
    "      <div class=\"col-sm-2\">",
    "        <h5>Call Type</h5>",
    "      </div>",
    "      <div class=\"col-sm-10\">",
    "        <select class=\"form-control\" ",
    "                [(ngModel)]=\"bezl.vars.type\">",
    "          <option *ngFor=\"let item of bezl.data.CallTypes\" [value]=\"item.CallType\">{{item.CallTypeDesc}}</option>",
    "        </select>",
    "      </div>",
    "    </div>",
    "    <div class=\"row\">",
    "      <div class=\"col-sm-2\">",
    "      </div>",
    "      <div class=\"col-sm-10\">",
    "        <button type=\"button\" ",
    "                (click)=\"bezl.functions['addNote']()\" ",
    "                class=\"btn btn-md btn-primary\" ",
    "                tabindex=\"-1\"  ",
    "                [disabled]=\"bezl.vars.loading.addHistory\"><i class=\"demo-pli-add icon-fw\"></i>Add Entry</button>",
    "      </div>",
    "    </div>",
    "",
    "  </div>",
    "  <br>",
    "</div>",
    "",
    "<!-- Filter input box -->",
    "<div class=\"row\" [hidden]=\"bezl.vars.selectedAccount.CRMCalls == null || bezl.vars.selectedAccount.CRMCalls.length == 0\">",
    "  <div class=\"col-sm-9\"> ",
    "    <input class=\"form-control\" id=\"filterString\" type=\"search\" incremental=\"true\" placeholder=\"Filter...\" [(ngModel)]=\"bezl.vars.filterString\" (search)=\"bezl.functions['onFilterChange']()\">",
    "  </div>",
    "</div>",
    "",
    "<div class=\"list-group bord-no\"  [hidden]=\"bezl.vars.loading\" *ngIf=\"bezl.vars.selectedAccount.ID != null\">",
    "  <template ngFor let-note [ngForOf]=\"bezl.vars.selectedAccount.CRMCalls\" let-i=\"index\">",
    "    <div class=\"list-group-item\"  *ngIf=\"note.show\">",
    "      <div class=\"media-body \">",
    "        <small class=\"pull-right\" *ngIf=\"!note.ExternalNote\">{{note.CallTypeDesc}}</small>",
    "        <strong>{{note.SalesRepName}}</strong><br>",
    "        <small class=\"text-muted\">{{note.CallDate | date:'shortDate'}} - {{note.ShortSummary}}</small>",
    "        <div class=\"well\">",
    "          {{note.Details}}",
    "        </div>",
    "      </div>",
    "    </div>",
    "  </template>",
    "</div>",
    "",
    "<div class=\"row\" *ngIf=\"bezl.vars.selectedAccount.ID != null\">",
    "  <div class=\"col-sm-3 pull-right\" [hidden]=\"bezl.vars.loading || bezl.vars.loadedMore\">",
    "    <button (click)=\"bezl.functions['more']()\" class=\"btn btn-md btn-default pull-right\"><i class=\"fa fa-angle-right fa-fw\"></i>More</button>",
    "  </div>",
    "</div>"
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.loading = false;\nbezl.vars.selectedAccount = {};\nbezl.vars.loadedMore = false;\n\n// Prompt for the CRM platform if it has not been previously specified\nif (typeof(Storage) !== \"undefined\" && localStorage.getItem(\"Platform\")) {\n    bezl.vars.Platform = localStorage.getItem(\"Platform\");\n\tbezl.vars.Company = localStorage.getItem(\"Company\");\n  \tbezl.vars.Connection = localStorage.getItem(\"Connection\");\n} else {\n    setTimeout(function(){ bezl.vars.showSettingsDialog = true; }, 3000);\n}\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.loading = false;\r\nbezl.vars.selectedAccount = {};\r\nbezl.vars.loadedMore = false;\r\n// Prompt for the CRM platform if it has not been previously specified\r\nif (typeof (Storage) !== \"undefined\" && localStorage.getItem(\"Platform\")) {\r\n    bezl.vars.Platform = localStorage.getItem(\"Platform\");\r\n    bezl.vars.Company = localStorage.getItem(\"Company\");\r\n    bezl.vars.Connection = localStorage.getItem(\"Connection\");\r\n}\r\nelse {\r\n    setTimeout(function () {\r\n        bezl.vars.showSettingsDialog = true;\r\n    }, 3000);\r\n}\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "more",
      "code": "$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\nbezl.vars.filterString = \"\";\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.runQuery(bezl, 'CRMCalls');\n  \tbezl.vars.loadedMore = true;\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\r\nbezl.vars.filterString = \"\";\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.runQuery(bezl, 'CRMCalls');\r\n    bezl.vars.loadedMore = true;\r\n});\r\n"
    },
    {
      "method": "addNote",
      "code": "$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\nbezl.vars.filterString = \"\";\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n  \tbezl.vars.Platform = localStorage.getItem(\"Platform\");\n\tfunctions.addNote(bezl);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\r\nbezl.vars.filterString = \"\";\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    bezl.vars.Platform = localStorage.getItem(\"Platform\");\r\n    functions.addNote(bezl);\r\n});\r\n"
    },
    {
      "method": "saveSettings",
      "code": "localStorage.setItem(\"Platform\", bezl.vars.Platform);\nlocalStorage.setItem(\"Connection\", bezl.vars.Connection);\nlocalStorage.setItem(\"Company\", bezl.vars.Company);\nbezl.vars.showSettingsDialog = false;",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "localStorage.setItem(\"Platform\", bezl.vars.Platform);\r\nlocalStorage.setItem(\"Connection\", bezl.vars.Connection);\r\nlocalStorage.setItem(\"Company\", bezl.vars.Company);\r\nbezl.vars.showSettingsDialog = false;\r\n"
    },
    {
      "method": "onFilterChange",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.applyFilter(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.applyFilter(bezl);\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\n// *********************************************************************************\n// Configuration Variables\n// Only edit these if you know what you are doing.\n// version: The version number of this app. Setting this vill use the javascript\n//          include files in the corresponding \"versions\" subfolder. An empty string\n//          will use the \"development\" javascript files in the root directory.\n// libVersion: The version number of the library javascript include files to use.\n// baseUrl: The base URL of the javascript include files. Generally this should be an\n//          empty string and the correct path will be automatically determined.\n//          However, for development you may wish to point this to a RawGit URL of\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\nbezl.vars.config.version = \"1.1\";\nbezl.vars.config.libVersion = \"1.0\";\nbezl.vars.config.baseUrl = \"\";\n// *********************************************************************************\n\n// If the baseURL is not set above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\n    }\n}\n\n// If version numbers exist above they will also be added to the javascript include URLs\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/roles/sales-rep/crm-calls-view/\"\n  \t\t\t\t\t\t\t+ (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\")\n  \t\t\t\t\t\t\t+ \"js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/libraries/\"\n\t\t\t\t\t\t\t+ (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\")",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.config = {};\r\n// *********************************************************************************\r\n// Configuration Variables\r\n// Only edit these if you know what you are doing.\r\n// version: The version number of this app. Setting this vill use the javascript\r\n//          include files in the corresponding \"versions\" subfolder. An empty string\r\n//          will use the \"development\" javascript files in the root directory.\r\n// libVersion: The version number of the library javascript include files to use.\r\n// baseUrl: The base URL of the javascript include files. Generally this should be an\r\n//          empty string and the correct path will be automatically determined.\r\n//          However, for development you may wish to point this to a RawGit URL of\r\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\r\nbezl.vars.config.version = \"1.1\";\r\nbezl.vars.config.libVersion = \"1.0\";\r\nbezl.vars.config.baseUrl = \"\";\r\n// *********************************************************************************\r\n// If the baseURL is not set above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\r\n    }\r\n}\r\n// If version numbers exist above they will also be added to the javascript include URLs\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/crm-calls-view/\" + (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\") + \"js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\" + (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\");\r\n"
    },
    {
      "method": "custSelection",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.custSelection(bezl, parm)\n});\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.custSelection(bezl, parm);\r\n});\r\n"
    }
  ],
  "data": ""
}