{
  "id": "f10b5c52-9c03-4b99-a949-5a8e82f86634",
  "name": "Map View",
  "template": "custom",
  "owner": "sremington@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<p-dialog header=\"Initial Settings\" [(visible)]=\"bezl.vars.showSettingsDialog\" [modal]=\"false\" width=500>",
    "  <div class=\"row\">",
    "    <div class=\"col-sm-4\">",
    "      CRM Platform:",
    "    </div>",
    "    <div class=\"col-sm-8\">",
    "      <select class=\"form-control\" [(ngModel)]=\"bezl.vars.config.CRMPlatform\">",
    "          <option value=\"Excel\">Default (Excel)</option>",
    "          <option value=\"Epicor10\">Epicor 10+</option>",
    "      </select>",
    "    </div>",
    "  </div>",
    "  <div class=\"row\">",
    "  \t<button (click)=\"bezl.functions['saveSettings']()\" class=\"btn btn-md btn-primary\">Save</button>",
    "  </div>",
    "</p-dialog>",
    "",
    "<div class=\"row\">",
    "  <div class=\"col-sm-12\">",
    "    <div class=\"row\">",
    "      <!--Panel with Tabs-->",
    "      <!--===================================================-->",
    "      <div class=\"panel panel-primary\">",
    "",
    "        <!--Panel heading-->",
    "        <div class=\"panel-heading\">",
    "          ",
    "          <!--Nav tabs-->",
    "          <div class=\"panel-control\">",
    "            <ul class=\"nav nav-tabs\">",
    "              <!-- Regular Menu Links -->",
    "              <li class=\"active hidden-xs\"><a data-toggle=\"tab\" href=\"#mapView\">Map View</a></li>",
    "              ",
    "              <!-- Small Screen Menu Links -->",
    "              <li class=\"active visible-xs\"><a data-toggle=\"tab\" href=\"#mapView\"><i class=\"fa fa-map-o\" aria-hidden=\"true\"></i></a></li>",
    "            </ul>",
    "          </div>",
    "          ",
    "          <!--Customer search box area - hidden in xs layout -->",
    "          <div class=\"row hidden-xs\">",
    "            <div class=\"col-sm-4 mar-all\">",
    "              <div [hidden]=\"!bezl.vars.loading.customerList\">",
    "            \t<label>Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "              </div>",
    "              <div [hidden]=\"bezl.vars.loading.customerList\">",
    "                <div class=\"typeahead__container\">",
    "              \t\t<div class=\"typeahead__field\">",
    "                \t\t<span class=\"typeahead__query\">",
    "                  \t\t\t<input class=\"js-typeahead-customers\" name=\"js-typeahead-customers\" type=\"search\" [(ngModel)]=\"bezl.vars.selectedCustomer.Name\"  autocomplete=\"off\">",
    "                \t\t</span>",
    "              \t\t</div>",
    "            \t</div>",
    "              </div>",
    "            </div>",
    "          </div>",
    "          ",
    "        </div>",
    "        ",
    "        <!--Panel body-->",
    "        <div class=\"panel-body\">",
    "          <!--Tabs content-->",
    "          <div class=\"tab-content\" id=\"tab-content-primary\">",
    "              <div id=\"mapView\" class=\"tab-pane fade in active\">",
    "                <div class=\"row\">",
    "                  <div class=\"col-sm-5\">",
    "                    <button (click)=\"bezl.functions['refresh']('CustList')\" class=\"btn btn-md btn-primary\">Refresh</button>",
    "                  </div>",
    "                  <div class=\"col-sm-7\">",
    "                    <div class=\"col-sm-2\">",
    "                      Location:",
    "                    </div>",
    "                    <div class=\"col-sm-6\">",
    "                      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"bezl.vars.currentAddress\">",
    "                    </div>",
    "                    <div class=\"col-sm-4\">",
    "                      <button (click)=\"bezl.functions['updateAddress']()\" class=\"btn btn-md btn-primary\" style=\"margin-bottom:10px\">Update</button>",
    "                      <button (click)=\"bezl.vars.showSettingsDialog = true\" class=\"btn btn-md btn-primary\" style=\"margin-bottom:10px\">Settings</button>",
    "                    </div>                    ",
    "                  </div>",
    "                </div>",
    "                <div class=\"col-sm-5\">",
    "",
    "                  <h4>Customer Listing</h4>",
    "                  <!--Customer search box area - only visible here in xs layout -->",
    "                  <div class=\"row  visible-xs\">",
    "                    <div class=\"col-sm-4 mar-all\">",
    "                      <div [hidden]=\"!bezl.vars.loading.customerList\">",
    "                        <label>Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "                      </div>",
    "                      <div [hidden]=\"bezl.vars.loading.customerList\">",
    "                        <div class=\"typeahead__container\">",
    "                            <div class=\"typeahead__field\">",
    "                                <span class=\"typeahead__query\">",
    "                                    Search: <input class=\"js-typeahead-customers2\" name=\"js-typeahead-customers2\" type=\"search\" autocomplete=\"off\">",
    "                                </span>",
    "                            </div>",
    "                        </div>",
    "                      </div>",
    "                    </div>",
    "                  </div> ",
    "                 ",
    "                  <div class=\"row\" style=\"height: 400px;\">",
    "                    <div id=\"customerGrid\"></div>",
    "                  </div>",
    "                </div>",
    "                ",
    "                <div class=\"col-sm-7\">",
    "                  <div id=\"map\" style=\"height: 450px; border-style: solid;\"></div>",
    "                </div>",
    "              </div>",
    "          </div>",
    "        </div>",
    "      </div>",
    "      <!--===================================================-->",
    "      <!--End of panel with tabs-->",
    "    </div>",
    "  </div>",
    "</div>"
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.currentAddress = \"\";\nbezl.vars.markers = [];\nbezl.vars.customers = [];\nbezl.vars.selectedCustomer = { \"CustNum\": 0 };\nbezl.vars.loading = { \n  customerList: true,\n  inquiry: false,\n  crmHistory: false,\n  invoiceHistory: false,\n  attachment: []\n}\nbezl.vars.newNote = {};\nbezl.vars.config = {};\nbezl.functions['setConfig']();\n\nbezl.vars.config.CRMPlatform = \"Epicor10\";\nbezl.functions['saveSettings']();\n\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n  \n    // Prompt for the CRM platform if it has not been previously specified\n    if (typeof(Storage) !== \"undefined\" && localStorage.getItem(\"CRMPlatform\")) {\n        bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n    } else {\n        setTimeout(function(){ \n          bezl.vars.config.CRMPlatform = \"Excel\";\n          bezl.vars.showSettingsDialog = true; \n        }, 3000);\n    }\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.currentAddress = \"\";\r\nbezl.vars.markers = [];\r\nbezl.vars.customers = [];\r\nbezl.vars.selectedCustomer = { \"CustNum\": 0 };\r\nbezl.vars.loading = {\r\n    customerList: true,\r\n    inquiry: false,\r\n    crmHistory: false,\r\n    invoiceHistory: false,\r\n    attachment: []\r\n};\r\nbezl.vars.newNote = {};\r\nbezl.vars.config = {};\r\nbezl.functions['setConfig']();\r\nbezl.vars.config.CRMPlatform = \"Epicor10\";\r\nbezl.functions['saveSettings']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n    // Prompt for the CRM platform if it has not been previously specified\r\n    if (typeof (Storage) !== \"undefined\" && localStorage.getItem(\"CRMPlatform\")) {\r\n        bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    }\r\n    else {\r\n        setTimeout(function () {\r\n            bezl.vars.config.CRMPlatform = \"Excel\";\r\n            bezl.vars.showSettingsDialog = true;\r\n        }, 3000);\r\n    }\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "customerInquiry",
      "code": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function(customer) {\n\tcustomer.runQuery(bezl, parm);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function (customer) {\r\n    customer.runQuery(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {\n GoogleAPIKey: \"AIzaSyDdandbc5e5BYufNbdp8q8f4QKY_Dvw6xI\",\n CustomerInquiries: [\n   {\n     Name: \"Open Quotes\",\n     QueryName: \"/map-view/OpenQuotes\",\n     Fields: [\n        { name: \"QuoteNum\", title: \"Quote #\", type: \"text\", visible: true, width: 50, editing: false },\n       \t{ name: \"QuoteAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\n     ]\n   },\n   {\n     Name: \"Invoice History\",\n     QueryName: \"/map-view/GetInvoiceHistory\",\n     Fields: [\n        { name: \"InvoiceNum\", title: \"Invoice #\", type: \"text\", visible: true, width: 50, editing: false },\n        { name: \"InvoiceDate\", title: \"Invoice Date\", type: \"text\", visible: true, width: 50, editing: false },\n       \t{ name: \"InvoiceAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\n     ]\n   }\n ]\n}\n\nbezl.vars.config.baseUrl = \"\";\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://bezlio-apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://bezlio-apps.bezl.io\";\n    }\n}\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/map-view/js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\"",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.config = {\r\n    GoogleAPIKey: \"AIzaSyDdandbc5e5BYufNbdp8q8f4QKY_Dvw6xI\",\r\n    CustomerInquiries: [\r\n        {\r\n            Name: \"Open Quotes\",\r\n            QueryName: \"/map-view/OpenQuotes\",\r\n            Fields: [\r\n                { name: \"QuoteNum\", title: \"Quote #\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"QuoteAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\r\n            ]\r\n        },\r\n        {\r\n            Name: \"Invoice History\",\r\n            QueryName: \"/map-view/GetInvoiceHistory\",\r\n            Fields: [\r\n                { name: \"InvoiceNum\", title: \"Invoice #\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"InvoiceDate\", title: \"Invoice Date\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"InvoiceAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\r\n            ]\r\n        }\r\n    ]\r\n};\r\nbezl.vars.config.baseUrl = \"\";\r\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://bezlio-apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://bezlio-apps.bezl.io\";\r\n    }\r\n}\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/map-view/js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\";\r\n"
    },
    {
      "method": "addNote",
      "code": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.addNote(bezl);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.addNote(bezl);\r\n});\r\n"
    },
    {
      "method": "viewFile",
      "code": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function(customer) {\n\tcustomer.viewFile(bezl, parm);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function (customer) {\r\n    customer.viewFile(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "updateTasks",
      "code": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.updateTasks(bezl);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.updateTasks(bezl);\r\n});\r\n"
    },
    {
      "method": "refresh",
      "code": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function(customer) {\n\tcustomer.runQuery(bezl, parm);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'customer.js'], function (customer) {\r\n    customer.runQuery(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "addTask",
      "code": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.addTask(bezl);\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.addTask(bezl);\r\n});\r\n"
    },
    {
      "method": "updateAddress",
      "code": "require([bezl.vars.config.baseJsUrl + 'map.js'], function(functions) {\n\tfunctions.updateAddress(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'map.js'], function (functions) {\r\n    functions.updateAddress(bezl);\r\n});\r\n"
    },
    {
      "method": "saveSettings",
      "code": "localStorage.setItem(\"CRMPlatform\", bezl.vars.config.CRMPlatform);\nbezl.vars.showSettingsDialog = false;",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "localStorage.setItem(\"CRMPlatform\", bezl.vars.config.CRMPlatform);\r\nbezl.vars.showSettingsDialog = false;\r\n"
    },
    {
      "method": "taskChange",
      "code": "if (parm.RowState != 'Added') {\n \tparm.RowState = 'Updated'; \n}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "if (parm.RowState != 'Added') {\r\n    parm.RowState = 'Updated';\r\n}\r\n"
    }
  ],
  "data": ""
}