{
	"name": "Map View",
	"template": "custom",
	"owner": "nowens@saberlogic.com",
	"shares": [],
	"vars": [],
	"dataSubscriptions": [],
	"markup": "<p-dialog header=\"Initial Settings\" [(visible)]=\"bezl.vars.showSettingsDialog\" [modal]=\"false\" width=500>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      CRM Platform:\n    </div>\n    <div class=\"col-sm-8\">\n      <select class=\"form-control\" [(ngModel)]=\"bezl.vars.config.CRMPlatform\">\n          <option value=\"Excel\">Default (Excel)</option>\n          <option value=\"Epicor10\">Epicor 10+</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"row\">\n  \t<button (click)=\"bezl.functions['saveSettings']()\" class=\"btn btn-md btn-primary\">Save</button>\n  </div>\n</p-dialog>\n\n<div class=\"row\">\n  <div class=\"col-sm-12\">\n    <div class=\"row\">\n      <!--Panel with Tabs-->\n      <!--===================================================-->\n      <div class=\"panel panel-primary\">\n\n        <!--Panel heading-->\n        <div class=\"panel-heading\">\n          \n          <!--Nav tabs-->\n          <div class=\"panel-control\">\n            <ul class=\"nav nav-tabs\">\n              <!-- Regular Menu Links -->\n              <li class=\"active hidden-xs\"><a data-toggle=\"tab\" href=\"#mapView\">Map View</a></li>\n              \n              <!-- Small Screen Menu Links -->\n              <li class=\"active visible-xs\"><a data-toggle=\"tab\" href=\"#mapView\"><i class=\"fa fa-map-o\" aria-hidden=\"true\"></i></a></li>\n            </ul>\n          </div>\n          \n          <!--Customer search box area - hidden in xs layout -->\n          <div class=\"row hidden-xs\">\n            <div class=\"col-sm-4 mar-all\">\n              <div [hidden]=\"!bezl.vars.loading.customerList\">\n            \t<label>Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>\n              </div>\n              <div [hidden]=\"bezl.vars.loading.customerList\">\n                <div class=\"typeahead__container\">\n              \t\t<div class=\"typeahead__field\">\n                \t\t<span class=\"typeahead__query\">\n                  \t\t\t<input class=\"js-typeahead-customers\" name=\"js-typeahead-customers\" type=\"search\" [(ngModel)]=\"bezl.vars.selectedCustomer.Name\"  autocomplete=\"off\">\n                \t\t</span>\n              \t\t</div>\n            \t</div>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        \n        <!--Panel body-->\n        <div class=\"panel-body\">\n          <!--Tabs content-->\n          <div class=\"tab-content\" id=\"tab-content-primary\">\n              <div id=\"mapView\" class=\"tab-pane fade in active\">\n                <div class=\"row\">\n                  <div class=\"col-sm-5\">\n                    <button (click)=\"bezl.functions['refresh']('CustList')\" class=\"btn btn-md btn-primary\">Refresh</button>\n                  </div>\n                  <div class=\"col-sm-7\">\n                    <div class=\"col-sm-2\">\n                      Location:\n                    </div>\n                    <div class=\"col-sm-6\">\n                      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"bezl.vars.currentAddress\">\n                    </div>\n                    <div class=\"col-sm-4\">\n                      <button (click)=\"bezl.functions['updateAddress']()\" class=\"btn btn-md btn-primary\" style=\"margin-bottom:10px\">Update</button>\n                      <button (click)=\"bezl.vars.showSettingsDialog = true\" class=\"btn btn-md btn-primary\" style=\"margin-bottom:10px\">Settings</button>\n                    </div>                    \n                  </div>\n                </div>\n                <div class=\"col-sm-5\">\n\n                  <h4>Customer Listing</h4>\n                  <!--Customer search box area - only visible here in xs layout -->\n                  <div class=\"row  visible-xs\">\n                    <div class=\"col-sm-4 mar-all\">\n                      <div [hidden]=\"!bezl.vars.loading.customerList\">\n                        <label>Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>\n                      </div>\n                      <div [hidden]=\"bezl.vars.loading.customerList\">\n                        <div class=\"typeahead__container\">\n                            <div class=\"typeahead__field\">\n                                <span class=\"typeahead__query\">\n                                    Search: <input class=\"js-typeahead-customers2\" name=\"js-typeahead-customers2\" type=\"search\" autocomplete=\"off\">\n                                </span>\n                            </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div> \n                 \n                  <div class=\"row\" style=\"height: 400px;\">\n                    <div id=\"customerGrid\"></div>\n                  </div>\n                </div>\n                \n                <div class=\"col-sm-7\">\n                  <div id=\"map\" style=\"height: 450px; border-style: solid;\"></div>\n                </div>\n              </div>\n          </div>\n        </div>\n      </div>\n      <!--===================================================-->\n      <!--End of panel with tabs-->\n    </div>\n  </div>\n</div>",
	"functions": [
		{
			"method": "ngOnInit",
			"code": "bezl.vars.currentAddress = \"\";\nbezl.vars.markers = [];\nbezl.vars.customers = [];\nbezl.vars.selectedCustomer = { \"CustNum\": 0 };\nbezl.vars.loading = { \n  customerList: true,\n  inquiry: false,\n  crmHistory: false,\n  invoiceHistory: false,\n  attachment: []\n}\nbezl.vars.newNote = {};\nbezl.vars.config = {};\nbezl.functions['setConfig']();\n\nbezl.vars.config.CRMPlatform = \"Epicor10\";\nbezl.functions['saveSettings']();\n\nrequire(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n  \n    // Prompt for the CRM platform if it has not been previously specified\n    if (typeof(Storage) !== \"undefined\" && localStorage.getItem(\"CRMPlatform\")) {\n        bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n    } else {\n        setTimeout(function(){ \n          bezl.vars.config.CRMPlatform = \"Excel\";\n          bezl.vars.showSettingsDialog = true; \n        }, 3000);\n    }\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "bezl.vars.currentAddress = \"\";\r\nbezl.vars.markers = [];\r\nbezl.vars.customers = [];\r\nbezl.vars.selectedCustomer = { \"CustNum\": 0 };\r\nbezl.vars.loading = {\r\n    customerList: true,\r\n    inquiry: false,\r\n    crmHistory: false,\r\n    invoiceHistory: false,\r\n    attachment: []\r\n};\r\nbezl.vars.newNote = {};\r\nbezl.vars.config = {};\r\nbezl.functions['setConfig']();\r\nbezl.vars.config.CRMPlatform = \"Epicor10\";\r\nbezl.functions['saveSettings']();\r\nrequire(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n    // Prompt for the CRM platform if it has not been previously specified\r\n    if (typeof (Storage) !== \"undefined\" && localStorage.getItem(\"CRMPlatform\")) {\r\n        bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    }\r\n    else {\r\n        setTimeout(function () {\r\n            bezl.vars.config.CRMPlatform = \"Excel\";\r\n            bezl.vars.showSettingsDialog = true;\r\n        }, 3000);\r\n    }\r\n});\r\n"
		},
		{
			"method": "onDataChange",
			"code": "bezl.data = dataResp;\n\nrequire(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "bezl.data = dataResp;\r\nrequire(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
		},
		{
			"method": "customerInquiry",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function(customer) {\n\tcustomer.runQuery(bezl, parm);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function (customer) {\r\n    customer.runQuery(bezl, parm);\r\n});\r\n"
		},
		{
			"method": "setConfig",
			"code": "bezl.vars.config = {\n GoogleAPIKey: \"AIzaSyDdandbc5e5BYufNbdp8q8f4QKY_Dvw6xI\",\n CustomerInquiries: [\n   {\n     Name: \"Open Quotes\",\n     QueryName: \"/map-view/OpenQuotes\",\n     Fields: [\n        { name: \"QuoteNum\", title: \"Quote #\", type: \"text\", visible: true, width: 50, editing: false },\n       \t{ name: \"QuoteAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\n     ]\n   },\n   {\n     Name: \"Invoice History\",\n     QueryName: \"/map-view/GetInvoiceHistory\",\n     Fields: [\n        { name: \"InvoiceNum\", title: \"Invoice #\", type: \"text\", visible: true, width: 50, editing: false },\n        { name: \"InvoiceDate\", title: \"Invoice Date\", type: \"text\", visible: true, width: 50, editing: false },\n       \t{ name: \"InvoiceAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\n     ]\n   }\n ]\n}",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "bezl.vars.config = {\r\n    GoogleAPIKey: \"AIzaSyDdandbc5e5BYufNbdp8q8f4QKY_Dvw6xI\",\r\n    CustomerInquiries: [\r\n        {\r\n            Name: \"Open Quotes\",\r\n            QueryName: \"/map-view/OpenQuotes\",\r\n            Fields: [\r\n                { name: \"QuoteNum\", title: \"Quote #\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"QuoteAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\r\n            ]\r\n        },\r\n        {\r\n            Name: \"Invoice History\",\r\n            QueryName: \"/map-view/GetInvoiceHistory\",\r\n            Fields: [\r\n                { name: \"InvoiceNum\", title: \"Invoice #\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"InvoiceDate\", title: \"Invoice Date\", type: \"text\", visible: true, width: 50, editing: false },\r\n                { name: \"InvoiceAmt\", title: \"Amount\", type: \"number\", visible: true, width: 50, editing: false },\r\n            ]\r\n        }\r\n    ]\r\n};\r\n"
		},
		{
			"method": "addNote",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.addNote(bezl);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.addNote(bezl);\r\n});\r\n"
		},
		{
			"method": "viewFile",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function(customer) {\n\tcustomer.viewFile(bezl, parm);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function (customer) {\r\n    customer.viewFile(bezl, parm);\r\n});\r\n"
		},
		{
			"method": "updateTasks",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.updateTasks(bezl);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.updateTasks(bezl);\r\n});\r\n"
		},
		{
			"method": "refresh",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function(customer) {\n\tcustomer.runQuery(bezl, parm);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/customer.js'], function (customer) {\r\n    customer.runQuery(bezl, parm);\r\n});\r\n"
		},
		{
			"method": "addTask",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function(crm) {\n  \tbezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\n\tcrm.addTask(bezl);\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/crm.js'], function (crm) {\r\n    bezl.vars.config.CRMPlatform = localStorage.getItem(\"CRMPlatform\");\r\n    crm.addTask(bezl);\r\n});\r\n"
		},
		{
			"method": "updateAddress",
			"code": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/map.js'], function(functions) {\n\tfunctions.updateAddress(bezl)\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://cdn.rawgit.com/bezlio/bezlio-apps/1.8/roles/sales-rep/map-view/js/map.js'], function (functions) {\r\n    functions.updateAddress(bezl);\r\n});\r\n"
		},
		{
			"method": "saveSettings",
			"code": "localStorage.setItem(\"CRMPlatform\", bezl.vars.config.CRMPlatform);\nbezl.vars.showSettingsDialog = false;",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "localStorage.setItem(\"CRMPlatform\", bezl.vars.config.CRMPlatform);\r\nbezl.vars.showSettingsDialog = false;\r\n"
		},
		{
			"method": "taskChange",
			"code": "if (parm.RowState != 'Added') {\n \tparm.RowState = 'Updated'; \n}",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "if (parm.RowState != 'Added') {\r\n    parm.RowState = 'Updated';\r\n}\r\n"
		}
	],
	"datatrans": null,
	"data": "",
	"id": "c89e152b-7776-47aa-93e4-6351ef5f55d4",
	"type": "Bezl"
}