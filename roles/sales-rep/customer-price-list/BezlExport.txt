{
	"name": "Customer Price List",
	"template": "custom",
	"owner": "nowens@saberlogic.com",
	"shares": [],
	"vars": [],
	"dataSubscriptions": [],
	"markup": "<style>\n  .btn.btn-mobile {\n  \tpadding-left: 6px;\n    padding-right: 6px;\n    width: 90px;\n  }\n  \n.button2 {width: 17%;}\n  .button3 {width: 25%;}\n  .button4 {width: 33%;}\n  .button5 {width: 50%;}\n</style>\n\n\n<form class=\"form-inline\">\n    <h1 *ngIf=\"(bezl.vars.selectedAccount | json) != ({} | json)\" style=\"font-size:20px\"> Selected Customer: {{bezl.vars.selectedAccount?.ID}} </h1>\n   <h1 *ngIf=\"(bezl.vars.selectedAccount | json) == ({} | json)\" style=\"font-size:20px\"> No Selected Customer</h1>\n  <input type=\"text\" class=\"form-control mb-2 mr-sm-2 mb-sm-0\" (keyup)=\"bezl.functions['filter']()\"\n         [(ngModel)]=\"bezl.vars['filter']\" name=\"filter\" placeholder=\"Filter by...\">\n</form>\n<label class=\"pull-right\" [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>\n\n\n<table class=\"table table-hover table-striped\" id=\"priceList\">\n   <thead>\n    <tr>\n     <th>\n       \n       <!-- This is the normal button layout for a big screen.  The small layout will follow -->\n       <div class=\"btn-group btn-group-justified hidden-xs btn-block\" role=\"group\" aria-label=\"Justified button group\">\n         <div class=\"button3 btn-group\" role=\"group\">\n           <button type=\"button\"\n                   (click)=\"bezl.functions['sort']('PartNum')\"\n                   class=\"btn btn-default btn-block\">\n             <span class=\"pull-left\">Part #</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n         </div>\n         <div class=\"button3 btn-group\" role=\"group\">\n           <button type=\"button\" \n                   (click)=\"bezl.functions['sort']('PartDescription')\"\n                   class=\"btn btn-default btn-block\">\n             <span class=\"pull-left\">Part Description</span>\n             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n         </div>\n         <div class=\"button2 btn-group\" role=\"group\">\n           <button type=\"button\" \n                   (click)=\"bezl.functions['sort']('BasePrice')\"\n                   class=\"btn btn-default btn-block\">\n             <span class=\"pull-left\">Base Price</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n         </div>\n         <div class=\"button4 btn-group\" role=\"group\">\n           <button type=\"button\" \n                   (click)=\"bezl.functions['sort']('StartDate')\"\n                   class=\"btn btn-default btn-block\">\n             <span class=\"pull-left\">Effective Date</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n         </div>\n       </div>\n       \n       <!-- This is the normal button layout for small screens -->\n       <div class=\"visible-xs\">\n         Sort By: <br />\n         <div class=\"btn-group btn-group-justified\">\n         \t<div class=\"btn-group\">\n             <button type=\"button\"(click)=\"bezl.functions['sort']('PartNum')\"class=\"btn btn-default\">\n             <span class=\"pull-left\">Part #</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n           </div>\n           \n\t\t\t<div class=\"btn-group\">\n            <button type=\"button\"(click)=\"bezl.functions['sort']('PartDescription')\"class=\"btn btn-default\">\n             <span class=\"pull-left\">Part Desc.</span>\n             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n           </div>\n         </div>\n\n         <div class=\"btn-group btn-group-justified\">\n         \t<div class=\"btn-group\">\n             <button type=\"button\" (click)=\"bezl.functions['sort']('BasePrice')\"class=\"btn btn-default\">\n             <span class=\"pull-left\">Base Price</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n            </div>\n           \n         \t<div class=\"btn-group\">\n             <button type=\"button\" (click)=\"bezl.functions['sort']('StartDate')\" class=\"btn btn-default\">\n             <span class=\"pull-left\">Eff. Date</span>\n             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'desc'\"></i>\n           </button>\n         </div>\n       </div>\n         \n\t</div>\n       \n     </th>\n    </tr>\n   </thead>\n  <tbody>\n   <tr class=\"read\" *ngFor=\"let row of bezl.vars.PriceList\">\n    <td>\n      <!-- Main row per account -->\n      <div class=\"row\"\n       (click)=\"bezl.functions['selectRow'](row)\">\n        <!-- Normal View -->\n        <div class=\"col-sm-3 hidden-xs\">\n          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>\n          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>\n          {{row.PartNum}}\n        </div>\n        \n        <div class=\"col-sm-3 hidden-xs\">{{row.PartDescription}}</div>\n        <div class=\"col-sm-2 hidden-xs\">{{row.BasePrice | currency:'USD':true:'1.2-2'}}</div>\n\t\t<div class=\"col-sm-4 hidden-xs\">{{row.StartDate | date}} - {{row.EndDate | date}}</div>\n        \n        <!-- Mobile View -->\n        <div class=\"col-sm-3 visible-xs\">\n          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>\n          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>\n          Part #: {{row.PartNum}}\n        </div>\n        \n        <div class=\"col-sm-3 visible-xs\">Description: {{row.PartDescription}}</div>\n        <div class=\"col-sm-2 visible-xs\">Base Price: {{row.BasePrice | currency:'USD':true:'1.2-2'}}</div>\n\t\t<div class=\"col-sm-4 visible-xs\">Effective Date: {{row.StartDate | date}} - {{row.EndDate | date}}</div>\n      </div>\n      <!-- END: Main row per account -->\n      \n      <!-- Drill-down view -->\n      <div class=\"row\" *ngIf=\"row.Selected\" style=\"margin-left:5px;margin-top:10px\">\n        \n        <table class=\"table table-hover table-striped\">\n   <thead>\n    <tr>\n     <th>\n       \n       <!-- This is the normal button layout for a big screen.  The small layout will follow -->\n       <div class=\"btn-group btn-group-justified hidden-xs \" role=\"group\" aria-label=\"Justified button group\">\n        <div class=\"btn-group button5\">\n           <button type=\"button\" class=\"btn btn-primary\">\n             <span class=\"pull-left\">Quantity</span>\n             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortColInner == 'Quantity' && bezl.vars.sortInner == 'asc'\"></i>\n             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortColInner == 'Quantity' && bezl.vars.sortInner == 'desc'\"></i>\n           </button>\n         </div>\n         <div class=\"btn-group button5\">\n           <button type=\"button\" class=\"btn btn-primary\">\n             <span class=\"pull-left\">Price Break Unit Price</span>\n             <i class=\"fa fa-sort-numeric-asc pull-left\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortColInner == 'PriceBreakUnitPrice' && bezl.vars.sortInner == 'asc'\"></i>\n             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" \n                *ngIf=\"bezl.vars.sortColInner == 'PriceBreakUnitPrice' && bezl.vars.sortInner == 'desc'\"></i>\n           </button>\n         </div>\n       </div>\n       \n       <!-- This is the normal button layout for small screens MOBILE-->\n       <div class=\"visible-xs\">\n         Lines: <br />\n       </div>\n       \n     </th>\n    </tr>\n   </thead>\n  <tbody>\n   \n    \n   <tr class=\"read\" *ngFor=\"let line of row.PartLines\">\n    <td>\n      <!-- Main row per line -->\n      <div class=\"row\">\n        <!-- Normal View -->\n\t\t<div class=\"col-sm-6 hidden-xs\">{{line.Quantity}}</div>\n        <div class=\"col-sm-6 hidden-xs\">{{line.PriceBreakUnitPrice | currency:'USD':true:'1.2-2'}}</div>\n        \n        <div class=\"col-sm-6 visible-xs\">Qty: {{line.Quantity}}</div>\n        <div class=\"col-sm-6 visible-xs\">Price Break Unit Price: {{line.PriceBreakUnitPrice | currency:'USD':true:'1.2-2'}}</div>\n      </div>\n     \n      <!-- END: Drill-down view --> \n      \n     </td>\n   </tr>\n  </tbody>\n</table>\n",
	"functions": [
		{
			"method": "ngOnInit",
			"code": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
		},
		{
			"method": "onDataChange",
			"code": "bezl.data = dataResp;\n\nrequire(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "bezl.data = dataResp;\r\nrequire(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
		},
		{
			"method": "filter",
			"code": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function(functions) {\n\tfunctions.filter(bezl)\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function (functions) {\r\n    functions.filter(bezl);\r\n});\r\n"
		},
		{
			"method": "selectRow",
			"code": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function(functions) {\n\tfunctions.select(bezl, parm)\n});",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function (functions) {\r\n    functions.select(bezl, parm);\r\n});\r\n"
		},
		{
			"method": "sort",
			"code": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});\n\n",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
		},
		{
			"method": "innerSort",
			"code": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function(functions) {\n\tfunctions.innerSort(bezl, parm)\n});\n\n",
			"declares": [
				"$",
				"parm",
				"bezl",
				"dataResp",
				"require"
			],
			"compiled": "require(['https://bezlio-apps.bezl.io/roles/sales-rep/customer-price-list/js/priceList.js'], function (functions) {\r\n    functions.innerSort(bezl, parm);\r\n});\r\n"
		}
	],
	"datatrans": null,
	"data": "",
	"id": "8f574bc4-b0c0-4586-9631-0f6013e0fedd",
	"type": "Bezl"
}