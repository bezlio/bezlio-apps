{
  "id": "d2cdf776-352f-4df8-bc74-6d7ae072bf87",
  "name": "Customer Price List",
  "template": "custom",
  "owner": "sremington@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<style>",
    "  .btn.btn-mobile {",
    "  \tpadding-left: 6px;",
    "    padding-right: 6px;",
    "    width: 90px;",
    "  }",
    "  ",
    ".button2 {width: 17%;}",
    "  .button3 {width: 25%;}",
    "  .button4 {width: 33%;}",
    "  .button5 {width: 50%;}",
    "</style>",
    "",
    "",
    "<form class=\"form-inline\">",
    "    <h1 *ngIf=\"(bezl.vars.selectedAccount | json) != ({} | json)\" style=\"font-size:20px\"> Selected Customer: {{bezl.vars.selectedAccount?.ID}} </h1>",
    "   <h1 *ngIf=\"(bezl.vars.selectedAccount | json) == ({} | json)\" style=\"font-size:20px\"> No Selected Customer</h1>",
    "  <input type=\"text\" class=\"form-control mb-2 mr-sm-2 mb-sm-0\" (keyup)=\"bezl.functions['filter']()\"",
    "         [(ngModel)]=\"bezl.vars['filter']\" name=\"filter\" placeholder=\"Filter by...\">",
    "</form>",
    "<label class=\"pull-right\" [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "",
    "",
    "<table class=\"table table-hover table-striped\" id=\"priceList\">",
    "   <thead>",
    "    <tr>",
    "     <th>",
    "       ",
    "       <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "       <div class=\"btn-group btn-group-justified hidden-xs btn-block\" role=\"group\" aria-label=\"Justified button group\">",
    "         <div class=\"button3 btn-group\" role=\"group\">",
    "           <button type=\"button\"",
    "                   (click)=\"bezl.functions['sort']('PartNum')\"",
    "                   class=\"btn btn-default btn-block\">",
    "             <span class=\"pull-left\">Part #</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"button3 btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('PartDescription')\"",
    "                   class=\"btn btn-default btn-block\">",
    "             <span class=\"pull-left\">Part Description</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"button2 btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('BasePrice')\"",
    "                   class=\"btn btn-default btn-block\">",
    "             <span class=\"pull-left\">Base Price</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"button4 btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('StartDate')\"",
    "                   class=\"btn btn-default btn-block\">",
    "             <span class=\"pull-left\">Effective Date</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "       </div>",
    "       ",
    "       <!-- This is the normal button layout for small screens -->",
    "       <div class=\"visible-xs\">",
    "         Sort By: <br />",
    "         <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\"(click)=\"bezl.functions['sort']('PartNum')\"class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Part #</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartNum' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "           </div>",
    "           ",
    "\t\t\t<div class=\"btn-group\">",
    "            <button type=\"button\"(click)=\"bezl.functions['sort']('PartDescription')\"class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Part Desc.</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'PartDescription' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "           </div>",
    "         </div>",
    "",
    "         <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('BasePrice')\"class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Base Price</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'BasePrice' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "            </div>",
    "           ",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('StartDate')\" class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Eff. Date</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'StartDate' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "       </div>",
    "         ",
    "\t</div>",
    "       ",
    "     </th>",
    "    </tr>",
    "   </thead>",
    "  <tbody>",
    "   <tr class=\"read\" *ngFor=\"let row of bezl.vars.PriceList\">",
    "    <td>",
    "      <!-- Main row per account -->",
    "      <div class=\"row\"",
    "       (click)=\"bezl.functions['selectRow'](row)\">",
    "        <!-- Normal View -->",
    "        <div class=\"col-sm-3 hidden-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>",
    "          {{row.PartNum}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-3 hidden-xs\">{{row.PartDescription}}</div>",
    "        <div class=\"col-sm-2 hidden-xs\">{{row.BasePrice | currency:'USD':true:'1.2-2'}}</div>",
    "\t\t<div class=\"col-sm-4 hidden-xs\">{{row.StartDate | date}} - {{row.EndDate | date}}</div>",
    "        ",
    "        <!-- Mobile View -->",
    "        <div class=\"col-sm-3 visible-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!row.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"row.Selected\"></i>",
    "          Part #: {{row.PartNum}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-3 visible-xs\">Description: {{row.PartDescription}}</div>",
    "        <div class=\"col-sm-2 visible-xs\">Base Price: {{row.BasePrice | currency:'USD':true:'1.2-2'}}</div>",
    "\t\t<div class=\"col-sm-4 visible-xs\">Effective Date: {{row.StartDate | date}} - {{row.EndDate | date}}</div>",
    "      </div>",
    "      <!-- END: Main row per account -->",
    "      ",
    "      <!-- Drill-down view -->",
    "      <div class=\"row\" *ngIf=\"row.Selected\" style=\"margin-left:5px;margin-top:10px\">",
    "        ",
    "        <table class=\"table table-hover table-striped\">",
    "   <thead>",
    "    <tr>",
    "     <th>",
    "       ",
    "       <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "       <div class=\"btn-group btn-group-justified hidden-xs \" role=\"group\" aria-label=\"Justified button group\">",
    "        <div class=\"btn-group button5\">",
    "           <button type=\"button\" class=\"btn btn-primary\">",
    "             <span class=\"pull-left\">Quantity</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortColInner == 'Quantity' && bezl.vars.sortInner == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortColInner == 'Quantity' && bezl.vars.sortInner == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group button5\">",
    "           <button type=\"button\" class=\"btn btn-primary\">",
    "             <span class=\"pull-left\">Price Break Unit Price</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-left\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortColInner == 'PriceBreakUnitPrice' && bezl.vars.sortInner == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortColInner == 'PriceBreakUnitPrice' && bezl.vars.sortInner == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "       </div>",
    "       ",
    "       <!-- This is the normal button layout for small screens MOBILE-->",
    "       <div class=\"visible-xs\">",
    "         Lines: <br />",
    "       </div>",
    "       ",
    "     </th>",
    "    </tr>",
    "   </thead>",
    "  <tbody>",
    "   ",
    "    ",
    "   <tr class=\"read\" *ngFor=\"let line of row.PartLines\">",
    "    <td>",
    "      <!-- Main row per line -->",
    "      <div class=\"row\">",
    "        <!-- Normal View -->",
    "\t\t<div class=\"col-sm-6 hidden-xs\">{{line.Quantity}}</div>",
    "        <div class=\"col-sm-6 hidden-xs\">{{line.PriceBreakUnitPrice | currency:'USD':true:'1.2-2'}}</div>",
    "        ",
    "        <div class=\"col-sm-6 visible-xs\">Qty: {{line.Quantity}}</div>",
    "        <div class=\"col-sm-6 visible-xs\">Price Break Unit Price: {{line.PriceBreakUnitPrice | currency:'USD':true:'1.2-2'}}</div>",
    "      </div>",
    "     ",
    "      <!-- END: Drill-down view --> ",
    "      ",
    "     </td>",
    "   </tr>",
    "  </tbody>",
    "</table>",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "filter",
      "code": "require([bezl.vars.config.baseUrl + 'priceList.js'], function(functions) {\n\tfunctions.filter(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseUrl + 'priceList.js'], function (functions) {\r\n    functions.filter(bezl);\r\n});\r\n"
    },
    {
      "method": "selectRow",
      "code": "require([bezl.vars.config.baseUrl + 'priceList.js'], function(functions) {\n\tfunctions.select(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseUrl + 'priceList.js'], function (functions) {\r\n    functions.select(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "sort",
      "code": "require([bezl.vars.config.baseUrl + 'priceList.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseUrl + 'priceList.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "innerSort",
      "code": "require([bezl.vars.config.baseUrl + 'priceList.js'], function(functions) {\n\tfunctions.innerSort(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseUrl + 'priceList.js'], function (functions) {\r\n    functions.innerSort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\nbezl.vars.config.baseUrl = \"\";\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    var tld = \"\";\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        tld = \"https://bezlio-apps-dev.bezl.io\";\n    } else {\n        tld = \"https://bezlio-apps.bezl.io\";\n    }\n    bezl.vars.config.baseUrl = tld + \"/roles/sales-rep/customer-price-list/js/\";\n}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.config = {};\r\nbezl.vars.config.baseUrl = \"\";\r\n// If the baseURL is not set in the line above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    var tld = \"\";\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        tld = \"https://bezlio-apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        tld = \"https://bezlio-apps.bezl.io\";\r\n    }\r\n    bezl.vars.config.baseUrl = tld + \"/roles/sales-rep/customer-price-list/js/\";\r\n}\r\n"
    }
  ],
  "data": ""
}